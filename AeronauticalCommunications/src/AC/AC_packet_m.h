//
// Generated file, do not edit! Created by opp_msgtool 6.0 from AC/AC_packet.msg.
//

#ifndef __AC_PACKET_M_H
#define __AC_PACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class AC_packet;
/**
 * Class generated from <tt>AC/AC_packet.msg:19</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message AC_packet
 * {
 *     simtime_t s_ac;
 * }
 * </pre>
 */
class AC_packet : public ::omnetpp::cMessage
{
  protected:
    omnetpp::simtime_t s_ac = SIMTIME_ZERO;

  private:
    void copy(const AC_packet& other);

  protected:
    bool operator==(const AC_packet&) = delete;

  public:
    AC_packet(const char *name=nullptr, short kind=0);
    AC_packet(const AC_packet& other);
    virtual ~AC_packet();
    AC_packet& operator=(const AC_packet& other);
    virtual AC_packet *dup() const override {return new AC_packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual omnetpp::simtime_t getS_ac() const;
    virtual void setS_ac(omnetpp::simtime_t s_ac);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AC_packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AC_packet& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline AC_packet *fromAnyPtr(any_ptr ptr) { return check_and_cast<AC_packet*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __AC_PACKET_M_H

