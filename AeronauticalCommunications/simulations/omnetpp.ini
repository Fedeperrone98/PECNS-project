[General]
network = AeroComm

sim-time-limit = 20000s
warmup-period = 5000s

**.visualizer.*.mobilityVisualizer.displayMobility = true
**.visualizer.*.mobilityVisualizer.displayPositions = true
**.visualizer.*.mobilityVisualizer.displayOrientations = false
**.visualizer.*.mobilityVisualizer.displayVelocities = true
**.visualizer.*.mobilityVisualizer.displayMovementTrails = false
**.visualizer.*.mobilityVisualizer.animationSpeed = 1

# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
*.ac[0].packetGenerator.rng-0 = 0
*.ac[0].mobility.rng-0 = 1

# Mobility models 
**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 100000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 100000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

*.ac[*].mobility.typename = "LinearMobility"
*.ac[*].mobility.speed = 275mps

*.ac[*].*.validation = false

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 16
*.*bs[*].mobility.columns = 4
*.*bs[*].mobility.rows = 4
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

# FACTORS
**.M = 25000							# 25 km
**.T = 0.000000001 						# 10 ^ -9
**.N_BS = 16
**.N_AC = 1
**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1       # default --> Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 2s
**.pktGenerator.t = 1s


[Config k_exp_distibution]

**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 1s


##############################
## 	  Validation configs 	##
##############################

################
#### DEBUG #####
################
[Config DeterministicDebug]

# RNGs
num-rngs = 1
seed-set = ${repetition}
repeat = 10
*.ac[0].mobility.rng-0 = 0

**.N_AC = 1

**.pktGenerator.kRandom = false
**.pktGenerator.k = 1s
**.pktGenerator.t = 1s

################
## DEGENERACY ##
################

############ Test 1 ---> 1 AC, 1 BS, distance of AC Deterministic, k deterministic ############
[Config DeterministicDegeneracy]
# RNGs
num-rngs = 1
seed-set = ${repetition}
repeat = 10
*.ac[*].mobility.rng-0 = 0

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = false
**.pktGenerator.k = 1s

**.pktGenerator.t = 1s

############ Test 2: 1 AC, 1 BS, distance of AC Deterministic, k uniform ############
[Config kUniformDegeneracy]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
*.ac[*].packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 2s

**.pktGenerator.t = 1s

############ Test 3: 1 AC, 1 BS, position of AC Deterministic, k exponential ############
[Config kExponentialDegeneracy]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
*.ac[*].packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 1s

**.pktGenerator.t = 1s

#################
## CONSISTENCY ##
#################

############ Test 0 - Case A: 1 AC, 1 BS, distance of AC Deterministic, k deterministic ############
[Config CaseA_kDeterministicConsistency]
# RNGs
num-rngs = 1
seed-set = ${repetition}
repeat = 10
*.ac[*].mobility.rng-0 = 0

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = false
**.pktGenerator.k = 1s
**.pktGenerator.t = 1s

############ Test 0 - Case B: 2 AC, 1 BS, distance of AC Deterministic, k deterministic (doubled) ############
[Config CaseB_kDeterministicConsistency]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
*.ac[0].mobility.rng-0 = 0
*.ac[1].mobility.rng-0 = 1

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 2

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = false
**.pktGenerator.k = 2s
**.pktGenerator.t = 2s


############ Test 1 - Case A: 1 AC, 1 BS, distance of AC Deterministic, k uniform ############
[Config CaseA_kUniformConsistency]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 2s

**.pktGenerator.t = 1s

############ Test 1 - Case B: 2 AC, 1 BS, distance of AC Deterministic, k uniform (doubled) ############
[Config CaseB_kUniformConsistency]
# RNGs
num-rngs = 4
seed-set = ${repetition}
repeat = 10
*.ac[0].packetGenerator.rng-0 = 0
*.ac[1].packetGenerator.rng-0 = 1
*.ac[0].mobility.rng-0 = 2
*.ac[1].mobility.rng-0 = 3

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 2

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 4s

**.pktGenerator.t = 2s

############ Test 2 - Case A: 1 AC, 1 BS, distance of AC Deterministic, k exponential ############
[Config CaseA_kExponentialConsistency]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 1

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 1s

**.pktGenerator.t = 1s

############ Test 2 - Case B: 2 AC, 1 BS, distance of AC Deterministic, k exponential (doubled) ############
[Config CaseB_kExponentialConsistency]
# RNGs
num-rngs = 4
seed-set = ${repetition}
repeat = 10
*.ac[0].packetGenerator.rng-0 = 0
*.ac[1].packetGenerator.rng-0 = 1
*.ac[0].mobility.rng-0 = 2
*.ac[1].mobility.rng-0 = 3

*.ac[*].mobility.speed = 0mps

**.N_BS = 1
**.N_AC = 2

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 2s

**.pktGenerator.t = 2s

#################
## CONTINUITY ###
#################

############ k UNIFORM --> kMin = 0 kMax = 0.5, 1, 2 ############
[Config kUniformContinuity]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_BS = 4
**.N_AC = 1

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = ${0.5s, 1s, 2s}

**.pktGenerator.t = 1s

############ k EXPONENTIAL --> kMean = 0.25, 0.5, 1 ############
[Config kExponentialContinuity]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_BS = 4
**.N_AC = 1

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = ${0.25s, 0.5s, 1s}

**.pktGenerator.t = 1s


##################
## MONOTONICITY ##
##################

############ k UNIFORM ############
[Config kUniformMonotonicity]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_BS = 4
**.N_AC = 1

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = ${0.6s, 0.9s, 1.2s, 1.5s, 1.8s, 2.1s, 2.4s}

**.pktGenerator.t = 1s

############ k EXPONENTIAL ############
[Config kExponentialMonotonicity]
# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 10
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_BS = 4
**.N_AC = 1

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = ${0.3s, 0.45s, 0.6s, 0.75s, 0.9s, 1.05s, 1.2s}

**.pktGenerator.t = 1s


##############################################
## Validation against the theoretical model ##
##############################################

############ k UNIFORM ############
[Config kUniformTheoreticalValidation]
num-rngs = 2
seed-set = ${repetition}
repeat = 26
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_AC = 1
**.N_BS = 1

*.ac[*].*.validation = true
*.ac[*].mobility.speed = 50000mps

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 25000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 25000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 0.00004s

**.pktGenerator.t = 0.00003s

############ k EXPONENTIAL ############
[Config kExponentialTheoreticalValidation]
num-rngs = 2
seed-set = ${repetition}
repeat = 26
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_AC = 1
**.N_BS = 1

*.ac[*].*.validation = true
*.ac[*].mobility.speed = 50000mps

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 25000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 25000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 0.00002s

**.pktGenerator.t = 0.00003s

[Config kUniformTheoreticalValidation_NoHandover]
num-rngs = 2
seed-set = ${repetition}
repeat = 26
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_AC = 1
**.N_BS = 1

*.ac[*].*.validation = true
*.ac[*].mobility.speed = 50000mps

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 25000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 25000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1	# Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 0.000024s

**.pktGenerator.t = 2s

############ k EXPONENTIAL ############
[Config kExponentialTheoreticalValidation_NoHandover]
num-rngs = 2
seed-set = ${repetition}
repeat = 26
**.packetGenerator.rng-0 = 0
*.ac[*].mobility.rng-0 = 1

**.N_AC = 1
**.N_BS = 1

*.ac[*].*.validation = true
*.ac[*].mobility.speed = 50000mps

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 1
*.*bs[*].mobility.columns = 1
*.*bs[*].mobility.rows = 1
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 25000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 25000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2	# Exponential distribution
**.pktGenerator.kMean = 0.000012s

**.pktGenerator.t = 2s

##########################################
## 		WARMUP and SIMTIME Calibration 	##
##########################################

[Config kUniform_Warmup_SimTime_Calibration]

# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 26
*.ac[0].packetGenerator.rng-0 = 0
*.ac[0].mobility.rng-0 = 1

# Mobility models 
**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 75000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 75000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

*.ac[*].mobility.typename = "LinearMobility"
*.ac[*].mobility.speed = 275mps

*.ac[*].*.validation = false

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 9
*.*bs[*].mobility.columns = 3
*.*bs[*].mobility.rows = 3
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

# FACTORS
**.N_BS = 9
**.N_AC = 1
**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 1       # default --> Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = 1s
**.pktGenerator.t = 1s

[Config kExponential_Warmup_SimTime_Calibration]

# RNGs
num-rngs = 2
seed-set = ${repetition}
repeat = 26
*.ac[0].packetGenerator.rng-0 = 0
*.ac[0].mobility.rng-0 = 1

# Mobility models 
**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 75000m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 75000m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

*.ac[*].mobility.typename = "LinearMobility"
*.ac[*].mobility.speed = 275mps

*.ac[*].*.validation = false

*.*bs[*].mobility.typename = "StaticGridMobility"
*.*bs[*].mobility.numHosts = 9
*.*bs[*].mobility.columns = 3
*.*bs[*].mobility.rows = 3
*.*bs[*].mobility.separationX = 25000m
*.*bs[*].mobility.separationY = 25000m

# FACTORS
**.N_BS = 9
**.N_AC = 1
**.pktGenerator.kRandom = true
**.pktGenerator.kDistribution = 2       # default --> Uniform distribution
**.pktGenerator.kMean = 0.5s
**.pktGenerator.t = 1s


############################################
## 				EXPERIMENTS				  ##
############################################

## SCENARIO 2^k*r UNIFORM ##
[Config kUniform_FactorialAnalysis]

repeat = 6

**.pktGenerator.kDistribution = 1       # default --> Uniform distribution
**.pktGenerator.kMin = 0s
**.pktGenerator.kMax = ${0.2s, 4s}
**.pktGenerator.t = ${5s, 25s}

## SCENARIO 2^k*r EXPONENTIAL ##
[Config kExponential_FactorialAnalysis]

repeat = 6

**.pktGenerator.kDistribution = 2       # exponential distribution
**.pktGenerator.kMean = ${0.1s, 2s}
**.pktGenerator.t = ${5s, 25s}
